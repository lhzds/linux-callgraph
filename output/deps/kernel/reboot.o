kernel/reboot.o
__ia32_sys_reboot -> (__se_sys_reboot)
__se_sys_reboot -> (hibernate, mutex_lock, do_exit, reboot_pid_ns, mutex_unlock, ns_capable, atomic_notifier_call_chain_is_empty, kernel_kexec, task_active_pid_ns, kernel_restart, strncpy_from_user, kernel_halt, kernel_power_off)
__x64_sys_reboot -> (__se_sys_reboot)
cpu_show -> (sprintf)
cpu_store -> (capable, kstrtouint)
ctrl_alt_del -> (queue_work_on, deferred_cad, kill_pid)
deferred_cad -> (kernel_restart)
devm_register_power_off_handler -> (devm_register_sys_off_handler)
devm_register_reboot_notifier -> (__devres_alloc_node, blocking_notifier_chain_register, devres_add, devm_unregister_reboot_notifier, devres_free)
devm_register_restart_handler -> (devm_register_sys_off_handler)
devm_register_sys_off_handler -> (register_sys_off_handler, kfree, __devm_add_action, blocking_notifier_chain_unregister, atomic_notifier_chain_unregister, devm_unregister_sys_off_handler)
devm_unregister_reboot_notifier -> (blocking_notifier_chain_unregister)
devm_unregister_sys_off_handler -> (blocking_notifier_chain_unregister, atomic_notifier_chain_unregister, kfree)
do_kernel_power_off -> (register_sys_off_handler, atomic_notifier_call_chain, atomic_notifier_chain_unregister, blocking_notifier_chain_unregister, kfree, legacy_pm_power_off)
do_kernel_restart -> (atomic_notifier_call_chain)
emergency_restart -> (kmsg_dump, machine_emergency_restart)
force_show -> (sprintf)
force_store -> (capable, kstrtobool)
hw_failure_emergency_poweroff_func -> (_printk, kmsg_dump, kernel_power_off, machine_emergency_restart)
hw_protection_shutdown -> (_printk, poweroff_work_func, hw_failure_emergency_poweroff_func, delayed_work_timer_fn, queue_work_on, __msecs_to_jiffies, queue_delayed_work_on)
kernel_can_power_off -> (atomic_notifier_call_chain_is_empty)
kernel_halt -> (_printk, cpu_hotplug_disable, device_shutdown, machine_halt, syscore_shutdown, set_cpus_allowed_ptr, __usermodehelper_disable, kmsg_dump, blocking_notifier_call_chain)
kernel_power_off -> (_printk, cpu_hotplug_disable, device_shutdown, syscore_shutdown, set_cpus_allowed_ptr, machine_power_off, __usermodehelper_disable, kmsg_dump, blocking_notifier_call_chain)
kernel_restart -> (_printk, cpu_hotplug_disable, device_shutdown, syscore_shutdown, set_cpus_allowed_ptr, __usermodehelper_disable, kmsg_dump, blocking_notifier_call_chain, machine_restart)
kernel_restart_prepare -> (blocking_notifier_call_chain, device_shutdown, __usermodehelper_disable)
migrate_to_reboot_cpu -> (cpu_hotplug_disable, set_cpus_allowed_ptr)
mode_show -> (sprintf)
mode_store -> (capable, strncmp)
orderly_poweroff -> (queue_work_on, poweroff_work_func)
orderly_reboot -> (reboot_work_func, queue_work_on)
poweroff_work_func -> (_printk, kernel_power_off, emergency_sync, argv_split, argv_free, call_usermodehelper)
reboot_ksysfs_init -> (force_store, kobject_create_and_add, cpu_store, mode_show, type_store, proc_dostring, cpu_show, type_show, kobject_put, proc_dointvec, mode_store, __register_sysctl_init, sysfs_create_group, force_show)
reboot_setup -> (_printk, simple_strtoul, strncmp, strchr)
reboot_work_func -> (_printk, emergency_sync, argv_split, argv_free, kernel_restart, call_usermodehelper)
register_platform_power_off -> (sys_off_notify, atomic_notifier_chain_register_unique_prio, blocking_notifier_chain_register_unique_prio, platform_power_off_notify)
register_reboot_notifier -> (blocking_notifier_chain_register)
register_restart_handler -> (atomic_notifier_chain_register)
register_sys_off_handler -> (sys_off_notify, kmalloc_trace, blocking_notifier_chain_register, blocking_notifier_chain_register_unique_prio, atomic_notifier_chain_register_unique_prio, kfree, atomic_notifier_chain_register)
type_show -> (sprintf)
type_store -> (capable, strncmp)
unregister_platform_power_off -> (blocking_notifier_chain_unregister, atomic_notifier_chain_unregister, kfree)
unregister_reboot_notifier -> (blocking_notifier_chain_unregister)
unregister_restart_handler -> (atomic_notifier_chain_unregister)
unregister_sys_off_handler -> (blocking_notifier_chain_unregister, atomic_notifier_chain_unregister, kfree)

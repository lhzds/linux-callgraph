net/netlink/af_netlink.o
__netlink_change_ngroups -> (__kmalloc, kvfree_call_rcu)
__netlink_clear_multicast_users -> (netlink_update_socket_mc)
__netlink_deliver_tap -> (skb_put, __dev_queue_xmit, skb_clone, __alloc_skb, is_vmalloc_addr)
__netlink_dump_start -> (mutex_lock, refcount_warn_saturate, __netlink_lookup, mutex_unlock, sk_free, __rcu_read_lock, __rcu_read_unlock, kfree_skb_reason, netlink_dump)
__netlink_kernel_create -> (netlink_bind, netlink_table_grab, sock_no_listen, sk_alloc, netlink_getsockopt, netlink_release, netlink_insert, netlink_sock_destruct, netlink_connect, netlink_ioctl, netlink_setsockopt, netlink_data_ready, sock_no_mmap, _raw_write_unlock_irq, sock_init_data, sock_release, __wake_up, netlink_getname, __init_waitqueue_head, __kmalloc, sock_no_accept, __mutex_init, sock_create_lite, sock_no_shutdown, datagram_poll, netlink_recvmsg, kfree, sock_no_socketpair, netlink_sendmsg)
__netlink_lookup -> (__rcu_read_unlock, rht_bucket_nested, __rcu_read_lock)
__netlink_ns_capable -> (ns_capable, file_ns_capable)
__netlink_sendskb -> (__rcu_read_unlock, __netlink_deliver_tap, skb_queue_tail, __rcu_read_lock)
__netlink_seq_next -> (rhashtable_walk_stop, rhashtable_walk_enter, rhashtable_walk_start_check, rhashtable_walk_next, rhashtable_walk_exit)
__nlmsg_put -> (skb_put)
__traceiter_netlink_extack -> (__SCT__tp_func_netlink_extack, __probestub_netlink_extack, __traceiter_netlink_extack)
deferred_put_nlk_sk -> (refcount_warn_saturate, queue_work_on, sk_free, kfree, netlink_sock_destruct_work)
do_trace_netlink_extack -> (__SCT__tp_func_netlink_extack, __probestub_netlink_extack, __traceiter_netlink_extack)
netlink_ack -> (nla_put, skb_put, strlen, netlink_unicast, sk_error_report, __alloc_skb, netlink_policy_dump_attr_size_estimate, netlink_policy_dump_write_attr, kfree_skb_reason)
netlink_add_tap -> (__rcu_read_unlock, mutex_lock, __rcu_read_lock, mutex_unlock)
netlink_add_usersock_entry -> (__wake_up, netlink_table_grab, kmalloc_trace, _raw_write_unlock_irq, panic)
netlink_allowed -> (ns_capable)
netlink_attachskb -> (refcount_warn_saturate, schedule_timeout, netlink_skb_destructor, sk_error_report, add_wait_queue, sk_free, remove_wait_queue, default_wake_function, kfree_skb_reason)
netlink_autobind -> (__netlink_lookup, __task_pid_nr_ns, __SCT__cond_resched, get_random_u32, __rcu_read_lock, __rcu_read_unlock, netlink_insert)
netlink_bind -> (__wake_up, netlink_table_grab, ns_capable, _raw_write_unlock_irq, _raw_read_unlock_irqrestore, _raw_read_lock_irqsave, netlink_autobind, netlink_realloc_groups, netlink_undo_bind, netlink_insert)
netlink_broadcast -> (refcount_warn_saturate, sk_error_report, __netlink_deliver_tap, peernet_has_id, kfree_skb_reason, yield, _raw_read_lock_irqsave, __rcu_read_unlock, __wake_up, netlink_skb_destructor, sk_free, _raw_read_unlock_irqrestore, sk_filter_trim_cap, skb_queue_tail, skb_clone, consume_skb, netlink_trim, __rcu_read_lock, peernet2id, file_ns_capable)
netlink_capable -> (ns_capable, file_ns_capable)
netlink_change_ngroups -> (__wake_up, netlink_table_grab, kvfree_call_rcu, _raw_write_unlock_irq, __kmalloc)
netlink_connect -> (netlink_autobind, ns_capable)
netlink_create -> (netlink_bind, sock_no_listen, sk_alloc, netlink_getsockopt, netlink_release, netlink_connect, netlink_sock_destruct, netlink_ioctl, netlink_setsockopt, sock_no_mmap, _raw_read_lock_irqsave, sock_init_data, __wake_up, netlink_getname, __request_module, _raw_read_unlock_irqrestore, __init_waitqueue_head, sock_no_accept, __mutex_init, sock_no_shutdown, datagram_poll, netlink_recvmsg, sock_no_socketpair, netlink_sendmsg)
netlink_detachskb -> (kfree_skb_reason, refcount_warn_saturate, sk_free)
netlink_dump -> (nla_put, skb_put, skb_queue_tail, mutex_lock, strlen, mutex_unlock, netlink_skb_destructor, __netlink_deliver_tap, consume_skb, sk_filter_trim_cap, __netlink_sendskb, __alloc_skb, __rcu_read_lock, __rcu_read_unlock, kfree_skb_reason)
netlink_getname -> (__wake_up, _raw_read_lock_irqsave, _raw_read_unlock_irqrestore)
netlink_getsockbyfilp -> (refcount_warn_saturate)
netlink_getsockopt -> (netlink_lock_table, _copy_to_user, netlink_unlock_table)
netlink_has_listeners -> (__rcu_read_unlock, __rcu_read_lock)
netlink_insert -> (refcount_warn_saturate, release_sock, queue_work_on, sk_free, rhashtable_insert_slow, __rcu_read_lock, rht_bucket_nested_insert, __rcu_read_unlock, lock_sock_nested)
netlink_kernel_release -> (sock_release)
netlink_lock_table -> (_raw_read_unlock_irqrestore, _raw_read_lock_irqsave)
netlink_net_capable -> (ns_capable, file_ns_capable)
netlink_net_exit -> (remove_proc_entry)
netlink_net_init -> (proc_create_net_data, netlink_seq_next, netlink_seq_show, netlink_seq_start, netlink_seq_stop)
netlink_ns_capable -> (ns_capable, file_ns_capable)
netlink_proto_init -> (register_pernet_subsys, rhashtable_init, netlink_net_init, panic, proto_register, rtnetlink_init, rhashtable_destroy, netlink_tap_init_net, netlink_create, kmalloc_trace, sock_register, netlink_hash, netlink_compare, netlink_add_usersock_entry, kfree, netlink_net_exit)
netlink_rcv_skb -> (netlink_ack, skb_pull)
netlink_realloc_groups -> (_raw_write_unlock_irq, __wake_up, netlink_table_grab, krealloc)
netlink_recvmsg -> (skb_free_datagram, __wake_up, put_pid, put_cmsg, sk_error_report, skb_copy_datagram_iter, skb_recv_datagram, netlink_dump, security_release_secctx, security_secid_to_secctx)
netlink_register_notifier -> (blocking_notifier_chain_register)
netlink_release -> (__wake_up, _raw_write_lock_bh, refcount_warn_saturate, __rht_bucket_nested, deferred_put_nlk_sk, netlink_table_grab, kvfree_call_rcu, queue_work_on, _raw_write_unlock_irq, skb_queue_purge, __rcu_read_lock, _raw_write_unlock_bh, call_rcu, __rcu_read_unlock, blocking_notifier_call_chain)
netlink_remove_tap -> (_printk, mutex_lock, mutex_unlock, synchronize_net, __rcu_read_lock, __rcu_read_unlock)
netlink_sendmsg -> (refcount_warn_saturate, vmalloc, security_socket_getpeersec_dgram, _copy_from_iter, pid_vnr, netlink_broadcast, kfree_skb_reason, iov_iter_revert, netlink_autobind, _printk, skb_put, put_pid, netlink_unicast, netlink_skb_destructor, __scm_destroy, security_netlink_send, __build_skb, vfree, refcount_inc, __scm_send, __alloc_skb, netlink_allowed)
netlink_sendskb -> (skb_queue_tail, refcount_warn_saturate, __netlink_deliver_tap, sk_free, __rcu_read_lock, __rcu_read_unlock)
netlink_seq_next -> (__netlink_seq_next)
netlink_seq_show -> (sock_i_ino, seq_printf, seq_puts)
netlink_seq_start -> (rhashtable_walk_enter, rhashtable_walk_start_check, __netlink_seq_next)
netlink_seq_stop -> (rhashtable_walk_stop, rhashtable_walk_exit)
netlink_set_err -> (_raw_read_unlock_irqrestore, _raw_read_lock_irqsave, sk_error_report)
netlink_setsockopt -> (__wake_up, netlink_table_grab, _copy_from_user, netlink_table_ungrab, ns_capable, netlink_realloc_groups, netlink_update_socket_mc)
netlink_skb_destructor -> (sock_rfree, vfree, is_vmalloc_addr)
netlink_sock_destruct -> (_printk, kfree_skb_reason, skb_queue_purge)
netlink_sock_destruct_work -> (sk_free)
netlink_table_grab -> (__SCT__might_resched, schedule, _raw_write_lock_irq, _raw_write_unlock_irq, add_wait_queue_exclusive, remove_wait_queue, default_wake_function)
netlink_table_ungrab -> (_raw_write_unlock_irq, __wake_up)
netlink_tap_init_net -> (__rcu_read_unlock, __rcu_read_lock, __mutex_init)
netlink_trim -> (pskb_expand_head, consume_skb, skb_clone, is_vmalloc_addr)
netlink_unicast -> (refcount_warn_saturate, __netlink_lookup, netlink_skb_destructor, __netlink_deliver_tap, consume_skb, netlink_attachskb, sk_filter_trim_cap, sk_free, netlink_trim, __rcu_read_lock, __rcu_read_unlock, kfree_skb_reason, netlink_sendskb)
netlink_unlock_table -> (__wake_up)
netlink_unregister_notifier -> (blocking_notifier_chain_unregister)
nlmsg_notify -> (netlink_broadcast, refcount_warn_saturate, netlink_unicast)
perf_trace_netlink_extack -> (strcpy, strlen, perf_trace_buf_alloc, perf_trace_run_bpf_submit)
refcount_inc -> (refcount_warn_saturate)
trace_event_raw_event_netlink_extack -> (strlen, trace_event_buffer_commit, trace_event_buffer_reserve, strcpy, __trace_trigger_soft_disabled)
trace_raw_output_netlink_extack -> (trace_handle_return, trace_raw_output_prep, trace_event_printf)

fs/namei.o
HAS_UNMAPPED_ID -> (make_vfsuid, make_vfsgid)
__check_sticky -> (capable_wrt_inode_uidgid, make_vfsuid)
__filename_parentat -> (link_path_walk, complete_walk, path_parentat, path_init, terminate_walk, kfree, __audit_inode)
__ia32_sys_link -> (do_linkat, getname_flags)
__ia32_sys_linkat -> (do_linkat, getname_flags)
__ia32_sys_mkdir -> (getname_flags, do_mkdirat)
__ia32_sys_mkdirat -> (getname_flags, do_mkdirat)
__ia32_sys_mknod -> (getname_flags, do_mknodat)
__ia32_sys_mknodat -> (getname_flags, do_mknodat)
__ia32_sys_rename -> (do_renameat2, getname_flags)
__ia32_sys_renameat -> (do_renameat2, getname_flags)
__ia32_sys_renameat2 -> (do_renameat2, getname_flags)
__ia32_sys_rmdir -> (getname_flags, do_rmdir)
__ia32_sys_symlink -> (getname_flags, do_symlinkat)
__ia32_sys_symlinkat -> (getname_flags, do_symlinkat)
__ia32_sys_unlink -> (getname_flags, do_unlinkat)
__ia32_sys_unlinkat -> (getname_flags, do_rmdir, do_unlinkat)
__lookup_slow -> (__d_lookup_unhash_wake, d_alloc_parallel, dput, d_invalidate)
__traverse_mounts -> (lockref_get, mntput, dput, lookup_mnt, finish_automount)
__x64_sys_link -> (do_linkat, getname_flags)
__x64_sys_linkat -> (do_linkat, getname_flags)
__x64_sys_mkdir -> (getname_flags, do_mkdirat)
__x64_sys_mkdirat -> (getname_flags, do_mkdirat)
__x64_sys_mknod -> (getname_flags, do_mknodat)
__x64_sys_mknodat -> (getname_flags, do_mknodat)
__x64_sys_rename -> (do_renameat2, getname_flags)
__x64_sys_renameat -> (do_renameat2, getname_flags)
__x64_sys_renameat2 -> (do_renameat2, getname_flags)
__x64_sys_rmdir -> (getname_flags, do_rmdir)
__x64_sys_symlink -> (getname_flags, do_symlinkat)
__x64_sys_symlinkat -> (getname_flags, do_symlinkat)
__x64_sys_unlink -> (getname_flags, do_unlinkat)
__x64_sys_unlinkat -> (getname_flags, do_rmdir, do_unlinkat)
check_acl -> (get_inode_acl, refcount_warn_saturate, posix_acl_permission, kvfree_call_rcu, get_cached_acl_rcu)
choose_mountpoint -> (__legitimize_mnt, path_put, lockref_get_not_dead, __rcu_read_lock, __rcu_read_unlock)
complete_walk -> (path_is_under, try_to_unlazy)
d_delete_notify -> (ihold, fsnotify, d_delete, iput)
do_file_open_root -> (kfree, path_openat, kmem_cache_free, getname_kernel)
do_filp_open -> (kfree, path_openat)
do_linkat -> (iput, kmem_cache_free, up_write, mnt_drop_write, vfs_link, dput, mntput, filename_create, may_linkat, __break_lease, capable, kfree, filename_lookup)
do_mkdirat -> (vfs_mkdir, current_umask, kmem_cache_free, up_write, mnt_drop_write, dput, mntput, filename_create, kfree)
do_mknodat -> (vfs_create, current_umask, kmem_cache_free, up_write, mnt_drop_write, vfs_mknod, dput, mntput, filename_create, kfree)
do_o_path -> (vfs_open, mntput, dput, path_lookupat, __audit_inode)
do_renameat2 -> (down_write, mutex_lock, iput, kmem_cache_free, up_write, lookup_one_qstr_excl, mutex_unlock, mnt_drop_write, vfs_rename, dput, mntput, __filename_parentat, lock_two_directories, mnt_want_write, __break_lease, kfree)
do_rmdir -> (down_write, up_write, kmem_cache_free, lookup_one_qstr_excl, mnt_drop_write, dput, mntput, __filename_parentat, vfs_rmdir, mnt_want_write, kfree)
do_symlinkat -> (up_write, kmem_cache_free, vfs_symlink, mnt_drop_write, dput, mntput, filename_create, kfree)
do_tmpfile -> (mnt_drop_write, dput, mntput, vfs_tmpfile, path_lookupat, mnt_want_write, __audit_inode)
do_unlinkat -> (down_write, iput, kmem_cache_free, up_write, lookup_one_qstr_excl, ihold, mnt_drop_write, vfs_unlink, dput, mntput, __filename_parentat, mnt_want_write, __break_lease, kfree)
done_path_create -> (up_write, mnt_drop_write, mntput, dput)
dont_mount -> (_raw_spin_lock, _raw_spin_unlock)
filename_create -> (down_write, up_write, lookup_one_qstr_excl, mnt_drop_write, dput, mntput, __filename_parentat, mnt_want_write)
filename_lookup -> (path_lookupat, kfree, __audit_inode)
follow_down -> (mntput, __traverse_mounts)
follow_down_one -> (lockref_get, mntput, dput, lookup_mnt)
follow_up -> (lockref_get, _raw_spin_unlock, _raw_spin_lock, dput, mntput, mntget)
fsnotify_create -> (__audit_inode_child, fsnotify)
fsnotify_link -> (__audit_inode_child, fsnotify)
fsnotify_link_count -> (fsnotify)
fsnotify_move -> (fsnotify_get_cookie, __audit_inode_child, fsnotify)
generic_permission -> (make_vfsgid, capable_wrt_inode_uidgid, make_vfsuid, check_acl, vfsgid_in_group_p)
getname -> (getname_flags)
getname_flags -> (kmem_cache_alloc, kmem_cache_free, __audit_getname, kmalloc_trace, putname, strncpy_from_user, kfree, __audit_reusename)
getname_kernel -> (kmem_cache_alloc, strlen, __audit_getname, kmalloc_trace, kmem_cache_free)
getname_uflags -> (getname_flags)
handle_dots -> (lockref_get, choose_mountpoint, dget_parent, path_put, dput, step_into, set_root, is_subdir, choose_mountpoint_rcu)
handle_lookup_down -> (lockref_get, step_into)
init_fs_namei_sysctls -> (__register_sysctl_init, proc_dointvec_minmax)
inode_permission -> (_raw_spin_unlock, _raw_spin_lock, security_inode_permission, HAS_UNMAPPED_ID, devcgroup_check_permission, generic_permission)
kern_path -> (kfree, kmem_cache_free, getname_kernel, filename_lookup)
kern_path_create -> (getname_kernel, kfree, kmem_cache_free, filename_create)
kern_path_locked -> (down_write, up_write, kmem_cache_free, lookup_one_qstr_excl, dput, mntput, getname_kernel, __filename_parentat, kfree)
kernel_tmpfile_open -> (alloc_empty_file_noaccount, vfs_tmpfile, fput)
legitimize_links -> (__legitimize_mnt, lockref_get_not_dead, drop_links)
legitimize_path -> (__legitimize_mnt, lockref_get_not_dead)
link_path_walk -> (walk_component, handle_dots, make_vfsuid, lookup_slow, lookup_fast, inode_permission, step_into, try_to_unlazy)
lock_rename -> (down_write, lock_two_directories, mutex_lock)
lock_rename_child -> (down_write, mutex_lock, up_write, mutex_unlock, lock_two_directories)
lock_two_directories -> (down_write, d_ancestor, lock_two_inodes)
lookup_fast -> (dput, __d_lookup_rcu, d_invalidate, __d_lookup, try_to_unlazy_next, try_to_unlazy)
lookup_one -> (__lookup_slow, dput, d_invalidate, lookup_one_common, d_lookup)
lookup_one_common -> (inode_permission)
lookup_one_len -> (__lookup_slow, dput, d_invalidate, lookup_one_common, d_lookup)
lookup_one_len_unlocked -> (lookup_one_unlocked)
lookup_one_positive_unlocked -> (lookup_one_unlocked, dput)
lookup_one_qstr_excl -> (d_lookup, d_alloc, dput, d_invalidate)
lookup_one_unlocked -> (__lookup_slow, down_read, up_read, dput, d_invalidate, lookup_one_common, d_lookup)
lookup_positive_unlocked -> (lookup_one_unlocked, dput)
lookup_slow -> (down_read, up_read, __lookup_slow)
may_delete -> (make_vfsgid, capable_wrt_inode_uidgid, make_vfsuid, inode_permission, __audit_inode_child, HAS_UNMAPPED_ID)
may_linkat -> (make_vfsgid, make_vfsuid, inode_permission, inode_owner_or_capable, audit_log_path_denied)
may_open -> (path_noexec, inode_owner_or_capable, inode_permission)
nd_alloc_stack -> (kmalloc_trace)
nd_jump_link -> (mntput, dput, path_put)
nd_jump_root -> (lockref_get, mntput, dput, set_root, mntget)
page_get_link -> (page_put_link, pagecache_get_page, __folio_put, read_cache_page)
page_put_link -> (__folio_put)
page_readlink -> (page_get_link, strlen, _copy_to_user)
page_symlink -> (__mark_inode_dirty)
path_get -> (lockref_get, mntget)
path_init -> (lockref_get, _raw_spin_unlock, _raw_spin_lock, path_get, __fdget_raw, __rcu_read_lock, fput, nd_jump_root, mntget)
path_lookupat -> (walk_component, link_path_walk, complete_walk, path_init, terminate_walk, handle_lookup_down)
path_openat -> (current_umask, mnt_drop_write, fsnotify, step_into, d_invalidate, __audit_inode_child, terminate_walk, may_open, do_tmpfile, alloc_empty_file, try_to_unlazy, link_path_walk, security_inode_create, lookup_fast, do_o_path, __d_lookup_unhash_wake, from_vfsuid, from_vfsgid, fput, d_lookup, mnt_want_write, lockref_get, vfs_open, down_read, make_vfsuid, audit_log_path_denied, __audit_inode, do_truncate, down_write, up_write, complete_walk, security_file_truncate, handle_dots, mode_strip_sgid, up_read, dput, mntput, inode_permission, path_init, d_alloc_parallel)
path_parentat -> (link_path_walk, path_init, complete_walk, terminate_walk)
path_pts -> (d_hash_and_lookup, dget_parent, dput, mntput, is_subdir, __traverse_mounts)
path_put -> (mntput, dput)
pick_link -> (path_put, atime_needs_update, try_to_unlazy, make_vfsuid, dput, mntput, legitimize_path, __SCT__cond_resched, nd_alloc_stack, security_inode_follow_link, nd_jump_root, touch_atime, audit_log_path_denied, __audit_inode)
put_link -> (mntput, dput)
putname -> (kfree, kmem_cache_free)
readlink_copy -> (strlen, _copy_to_user)
set_root -> (lockref_get, _raw_spin_lock, mntget, _raw_spin_unlock)
step_into -> (pick_link, mntput, dput, try_to_unlazy_next, __lookup_mnt, mntget, __traverse_mounts)
terminate_walk -> (__rcu_read_unlock, mntput, dput)
try_break_deleg -> (ihold, __break_lease)
try_lookup_one_len -> (d_lookup, lookup_one_common, dput, d_invalidate)
try_to_unlazy -> (__rcu_read_unlock, legitimize_links, __legitimize_mnt, lockref_get_not_dead)
try_to_unlazy_next -> (legitimize_links, __legitimize_mnt, lockref_get_not_dead, dput, __rcu_read_unlock)
unlock_rename -> (mutex_unlock, up_write)
user_path_at_empty -> (getname_flags, kfree, kmem_cache_free, filename_lookup)
user_path_create -> (getname_flags, kfree, kmem_cache_free, filename_create)
vfs_create -> (security_inode_create, current_umask, mode_strip_sgid, fsnotify, inode_permission, __audit_inode_child, from_vfsuid, from_vfsgid)
vfs_get_link -> (security_inode_readlink)
vfs_link -> (down_write, make_vfsgid, up_write, try_break_deleg, _raw_spin_unlock, _raw_spin_lock, make_vfsuid, inode_permission, security_inode_link, __audit_inode_child, from_vfsuid, from_vfsgid, fsnotify_link)
vfs_mkdir -> (current_umask, mode_strip_sgid, fsnotify, inode_permission, __audit_inode_child, from_vfsuid, from_vfsgid, security_inode_mkdir)
vfs_mknod -> (current_umask, fsnotify_create, mode_strip_sgid, inode_permission, __audit_inode_child, security_inode_mknod, from_vfsuid, from_vfsgid, capable, devcgroup_check_permission)
vfs_mkobj -> (security_inode_create, fsnotify, inode_permission, __audit_inode_child, from_vfsuid, from_vfsgid)
vfs_path_lookup -> (kfree, kmem_cache_free, getname_kernel, filename_lookup)
vfs_path_parent_lookup -> (__filename_parentat)
vfs_readlink -> (_raw_spin_lock, strlen, _copy_to_user, _raw_spin_unlock)
vfs_rename -> (__detach_mounts, try_break_deleg, d_exchange, __audit_inode_child, from_vfsuid, from_vfsgid, release_dentry_name_snapshot, fsnotify_move, take_dentry_name_snapshot, lockref_get, may_delete, up_write, shrink_dcache_parent, security_inode_rename, dput, inode_permission, d_move, dont_mount, lock_two_inodes, __is_local_mountpoint)
vfs_rmdir -> (__detach_mounts, down_write, lockref_get, iput, up_write, ihold, may_delete, shrink_dcache_parent, dput, fsnotify, d_delete, security_inode_rmdir, dont_mount, __is_local_mountpoint)
vfs_symlink -> (fsnotify, inode_permission, __audit_inode_child, from_vfsuid, from_vfsgid, security_inode_symlink)
vfs_tmpfile -> (current_umask, _raw_spin_unlock, _raw_spin_lock, d_alloc, mode_strip_sgid, dput, inode_permission, may_open)
vfs_unlink -> (__detach_mounts, down_write, security_inode_unlink, up_write, ihold, may_delete, fsnotify, dont_mount, __break_lease, fsnotify_link_count, __is_local_mountpoint, d_delete_notify)
walk_component -> (put_link, handle_dots, lookup_slow, mntput, dput, lookup_fast, step_into)

drivers/scsi/scsi_lib.o
__scsi_init_queue -> (blk_queue_segment_boundary, blk_queue_max_segment_size, blk_queue_max_hw_sectors, blk_queue_dma_alignment, blk_queue_max_segments, blk_queue_virt_boundary)
__scsi_queue_insert -> (blk_mq_requeue_request, scsi_dec_host_busy)
device_quiesce_fn -> (scsi_device_quiesce)
device_resume_fn -> (mutex_unlock, mutex_lock, blk_clear_pm_only)
device_unblock -> (mutex_lock, blk_mq_unquiesce_queue, mutex_unlock)
scsi_alloc_request -> (blk_mq_alloc_request)
scsi_alloc_sgtables -> (sg_alloc_table_chained, sg_next, __blk_rq_map_sg)
scsi_block_targets -> (scsi_is_target_device, target_block, device_for_each_child, blk_mq_wait_quiesce_done)
scsi_build_sense -> (scsi_build_sense_buffer)
scsi_cleanup_rq -> (sg_free_table_chained)
scsi_complete -> (scmd_printk, __scsi_queue_insert, scsi_finish_command, scsi_decide_disposition, scsi_eh_scmd_add)
scsi_dec_host_busy -> (_raw_spin_lock_irqsave, scsi_eh_wakeup, __rcu_read_lock, _raw_spin_unlock_irqrestore, __rcu_read_unlock)
scsi_device_block -> (mutex_lock, __warn_printk, mutex_unlock, blk_mq_quiesce_queue_nowait)
scsi_device_from_queue -> (scsi_complete, scsi_mq_get_budget, scsi_mq_init_request, scsi_mq_get_rq_budget_token, scsi_commit_rqs, scsi_init_hctx, scsi_show_rq, scsi_mq_set_rq_budget_token, scsi_timeout, scsi_mq_poll, scsi_mq_put_budget, get_device, scsi_cleanup_rq, scsi_mq_exit_request, scsi_mq_lld_busy, scsi_queue_rq, scsi_map_queues)
scsi_device_quiesce -> (mutex_lock, blk_mq_freeze_queue, blk_mq_unfreeze_queue, blk_set_pm_only, mutex_unlock, synchronize_rcu, blk_clear_pm_only)
scsi_device_resume -> (mutex_unlock, mutex_lock, blk_clear_pm_only)
scsi_device_state_check -> (sdev_prefix_printk)
scsi_device_unbusy -> (scsi_dec_host_busy)
scsi_done -> (scsi_done_internal)
scsi_done_direct -> (scsi_done_internal)
scsi_done_internal -> (scsi_complete, blk_mq_complete_request, __traceiter_scsi_dispatch_cmd_done, scsi_eh_done, __SCT__tp_func_scsi_dispatch_cmd_done, __probestub_scsi_dispatch_cmd_done)
scsi_end_request -> (sg_free_table_chained, add_disk_randomness, __blk_mq_end_request, blk_mq_run_hw_queues, __rcu_read_lock, blk_update_request, __rcu_read_unlock, kblockd_schedule_work)
scsi_evt_thread -> (sdev_evt_send_simple, _raw_spin_lock_irqsave, kobject_uevent_env, scsi_rescan_device, _raw_spin_unlock_irqrestore, kfree)
scsi_execute_cmd -> (scsi_normalize_sense, blk_rq_map_kern, blk_execute_rq, blk_mq_alloc_request, blk_mq_free_request)
scsi_exit_queue -> (kmem_cache_destroy)
scsi_free_sgtables -> (sg_free_table_chained)
scsi_host_block -> (mutex_lock, mutex_unlock, blk_mq_wait_quiesce_done, scsi_device_put, blk_mq_quiesce_queue_nowait, __scsi_iterate_devices)
scsi_host_unblock -> (mutex_lock, mutex_unlock, scsi_device_put, blk_mq_unquiesce_queue, __scsi_iterate_devices)
scsi_init_command -> (scmd_eh_abort_handler, delayed_work_timer_fn, init_timer_key)
scsi_init_sense_cache -> (mutex_unlock, kmem_cache_create_usercopy, mutex_lock)
scsi_internal_device_block_nowait -> (blk_mq_quiesce_queue_nowait)
scsi_internal_device_unblock_nowait -> (blk_mq_unquiesce_queue)
scsi_io_completion -> (scsi_noretry_cmd, __warn_printk, scsi_mq_requeue_cmd, scsi_io_completion_nz_result, scsi_io_completion_action, scsi_end_request)
scsi_io_completion_action -> (scmd_printk, scsi_print_result, scsi_mq_requeue_cmd, scsi_command_normalize_sense, scsi_print_sense, ___ratelimit, blk_mq_requeue_request, scsi_print_command, scsi_end_request)
scsi_io_completion_nz_result -> (scsi_command_normalize_sense, scsi_print_sense)
scsi_kick_sdev_queue -> (blk_mq_run_hw_queues)
scsi_kmap_atomic_sg -> (_printk, sg_next)
scsi_map_queues -> (blk_mq_map_queues)
scsi_mode_select -> (kfree, scsi_execute_cmd, __kmalloc)
scsi_mode_sense -> (scsi_execute_cmd)
scsi_mq_exit_request -> (kmem_cache_free)
scsi_mq_free_tags -> (complete, blk_mq_free_tag_set)
scsi_mq_get_budget -> (blk_mq_delay_run_hw_queues, sbitmap_get, sbitmap_weight)
scsi_mq_init_request -> (kmem_cache_free, kmem_cache_alloc_node)
scsi_mq_lld_busy -> (sbitmap_weight)
scsi_mq_requeue_cmd -> (blk_mq_delay_kick_requeue_list, blk_mq_requeue_request, sg_free_table_chained)
scsi_mq_setup_tags -> (scsi_complete, scsi_mq_get_budget, scsi_mq_init_request, blk_mq_alloc_tag_set, scsi_commit_rqs, scsi_init_hctx, scsi_mq_get_rq_budget_token, scsi_show_rq, scsi_mq_set_rq_budget_token, scsi_timeout, scsi_mq_poll, scsi_mq_put_budget, scsi_cleanup_rq, scsi_mq_exit_request, scsi_mq_lld_busy, scsi_queue_rq, scsi_map_queues)
scsi_queue_insert -> (__scsi_queue_insert)
scsi_queue_rq -> (scsi_host_busy, sg_free_table_chained, __traceiter_scsi_dispatch_cmd_error, _raw_spin_lock_irq, delayed_work_timer_fn, blk_mq_run_hw_queues, scmd_eh_abort_handler, __SCT__tp_func_scsi_dispatch_cmd_error, scsi_done_internal, blk_mq_start_request, __probestub_scsi_dispatch_cmd_error, init_timer_key, __SCT__tp_func_scsi_dispatch_cmd_start, _raw_spin_unlock_irq, scsi_alloc_sgtables, __traceiter_scsi_dispatch_cmd_start, scsi_device_state_check, scsi_dec_host_busy, __probestub_scsi_dispatch_cmd_start, kblockd_schedule_work)
scsi_requeue_run_queue -> (scsi_run_queue)
scsi_run_host_queues -> (scsi_run_queue, __scsi_iterate_devices)
scsi_run_queue -> (__starget_for_each_device, blk_get_queue, scsi_kick_sdev_queue, _raw_spin_lock_irqsave, blk_put_queue, blk_mq_run_hw_queues, _raw_spin_unlock_irqrestore, blk_mq_kick_requeue_list)
scsi_start_queue -> (blk_mq_unquiesce_queue)
scsi_target_quiesce -> (starget_for_each_device, device_quiesce_fn)
scsi_target_resume -> (device_resume_fn, starget_for_each_device)
scsi_target_unblock -> (device_for_each_child, scsi_is_target_device, device_unblock, target_unblock, starget_for_each_device)
scsi_test_unit_ready -> (scsi_execute_cmd)
scsi_unblock_requests -> (scsi_run_queue, __scsi_iterate_devices)
scsi_vpd_lun_id -> (__rcu_read_unlock, snprintf, __rcu_read_lock)
scsi_vpd_tpg_id -> (__rcu_read_unlock, __rcu_read_lock)
sdev_evt_alloc -> (kmalloc_trace)
sdev_evt_send -> (queue_work_on, _raw_spin_lock_irqsave, _raw_spin_unlock_irqrestore)
sdev_evt_send_simple -> (queue_work_on, kmalloc_trace, _raw_spin_lock_irqsave, sdev_prefix_printk, _raw_spin_unlock_irqrestore)
target_block -> (starget_for_each_device, scsi_is_target_device, scsi_device_block)
target_unblock -> (starget_for_each_device, scsi_is_target_device, device_unblock)

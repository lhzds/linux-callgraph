drivers/scsi/sg.o
dev_seq_start -> (kmalloc_trace, _raw_read_unlock_irqrestore, _raw_read_lock_irqsave, idr_for_each, sg_idr_max_id)
dev_seq_stop -> (kfree)
exit_sg -> (class_destroy, sg_remove_device, unregister_sysctl_table, idr_destroy, unregister_chrdev_region, class_interface_unregister, sg_add_device, remove_proc_subtree)
init_sg -> (dev_seq_next, sg_proc_seq_show_devstrs, proc_dointvec, sg_proc_seq_show_devhdr, dev_seq_start, seq_lseek, class_create, class_destroy, sg_proc_seq_show_version, sg_proc_seq_show_dev, proc_create_single_data, sg_proc_write_adio, dev_seq_stop, sg_proc_seq_show_debug, sg_add_device, proc_mkdir, proc_create, unregister_chrdev_region, sg_proc_single_open_adio, scsi_register_interface, sg_proc_single_open_dressz, proc_create_seq_private, sg_proc_write_dressz, register_chrdev_region, sg_remove_device, register_sysctl, seq_read, single_release)
open_wait -> (init_wait_entry, __SCT__might_resched, mutex_lock, mutex_unlock, schedule, finish_wait, prepare_to_wait_event)
sg_add_device -> (cdev_del, sg_open, sg_mmap, sprintf, sg_poll, idr_alloc, sg_ioctl, sg_read, kmalloc_trace, sdev_prefix_printk, cdev_alloc, sg_fasync, _raw_write_lock_irqsave, _printk, blk_get_queue, blk_put_queue, cdev_add, sg_write, __init_waitqueue_head, idr_preload, compat_ptr_ioctl, __mutex_init, _raw_write_unlock_irqrestore, sg_release, sysfs_create_link, idr_remove, kfree, device_create)
sg_add_request -> (jiffies_to_msecs, _raw_write_unlock_irqrestore, _raw_write_lock_irqsave)
sg_add_sfp -> (refcount_warn_saturate, __mutex_init, kmalloc_trace, _raw_write_unlock_irqrestore, __init_waitqueue_head, sg_build_reserve, kfree, _raw_write_lock_irqsave)
sg_allow_access -> (scsi_cmd_allowed)
sg_build_indirect -> (__free_pages, alloc_pages, __kmalloc)
sg_build_reserve -> (__free_pages, sg_build_indirect, kfree)
sg_common_write -> (__wake_up, _raw_write_lock_irqsave, mutex_lock, refcount_warn_saturate, scsi_alloc_request, sg_finish_rem_req, sg_link_reserve, mutex_unlock, jiffies_to_msecs, _raw_write_unlock_irqrestore, sg_rq_end_io, blk_rq_map_user_io, blk_execute_rq_nowait, sg_build_indirect, blk_mq_free_request)
sg_fasync -> (fasync_helper)
sg_finish_rem_req -> (kfree, __free_pages, blk_rq_unmap_user, blk_mq_free_request)
sg_get_rq_mark -> (_raw_write_unlock_irqrestore, _raw_write_lock_irqsave)
sg_ioctl -> (__SCT__might_resched, mutex_lock, schedule, _raw_write_lock_irq, scsi_ioctl_block_when_processing_errors, blk_trace_startstop, sg_new_write, _copy_to_user, init_wait_entry, kmalloc_trace, _raw_write_unlock_irq, prepare_to_wait_event, _raw_read_lock_irqsave, scsi_block_when_processing_errors, sg_build_reserve, __free_pages, blk_trace_setup, mutex_unlock, scsi_ioctl, jiffies_to_msecs, _raw_read_unlock_irqrestore, sg_new_read, finish_wait, blk_trace_remove, kfree)
sg_mmap -> (down_write, mutex_lock, up_write, sg_vma_fault, mutex_unlock)
sg_new_read -> (__wake_up, sg_finish_rem_req, _raw_write_unlock_irqrestore, put_sg_io_hdr, _copy_to_user, _raw_write_lock_irqsave)
sg_new_write -> (__wake_up, sg_remove_request, _copy_from_user, sg_add_request, sg_common_write, _raw_write_unlock_irqrestore, get_sg_io_hdr, __msecs_to_jiffies, sg_allow_access, _raw_write_lock_irqsave)
sg_open -> (mutex_lock, open_wait, refcount_warn_saturate, scsi_device_put, nonseekable_open, _raw_read_lock_irqsave, scsi_block_when_processing_errors, idr_find, _raw_write_lock_irqsave, __wake_up, scsi_autopm_put_device, mutex_unlock, sg_add_sfp, blk_put_queue, _raw_read_unlock_irqrestore, scsi_autopm_get_device, scsi_device_get, _raw_write_unlock_irqrestore, blk_trace_remove, idr_remove, kfree)
sg_poll -> (_raw_read_unlock_irqrestore, _raw_read_lock_irqsave)
sg_proc_seq_show_debug -> (seq_printf, _raw_read_unlock, jiffies_to_msecs, seq_puts, _raw_read_lock, _raw_read_unlock_irqrestore, _raw_read_lock_irqsave, idr_find)
sg_proc_seq_show_dev -> (seq_printf, seq_puts, _raw_read_unlock_irqrestore, _raw_read_lock_irqsave, sbitmap_weight, idr_find)
sg_proc_seq_show_devhdr -> (seq_puts)
sg_proc_seq_show_devstrs -> (idr_find, seq_printf, _raw_read_unlock_irqrestore, _raw_read_lock_irqsave, seq_puts)
sg_proc_seq_show_int -> (seq_printf)
sg_proc_seq_show_version -> (seq_printf)
sg_proc_single_open_adio -> (sg_proc_seq_show_int, single_open)
sg_proc_single_open_dressz -> (sg_proc_seq_show_int, single_open)
sg_proc_write_adio -> (capable, kstrtoul_from_user)
sg_proc_write_dressz -> (capable, kstrtoul_from_user)
sg_read -> (init_wait_entry, _printk, __SCT__might_resched, sg_finish_rem_req, sg_get_rq_mark, sg_new_read, sg_remove_request, kmalloc_trace, schedule, finish_wait, __task_pid_nr_ns, _raw_write_unlock_irqrestore, prepare_to_wait_event, sg_read_oxfer, kfree, _copy_to_user, _raw_write_lock_irqsave)
sg_read_oxfer -> (_copy_to_user)
sg_release -> (__wake_up, mutex_lock, refcount_warn_saturate, scsi_autopm_put_device, mutex_unlock, queue_work_on, _raw_write_unlock_irqrestore, sg_remove_sfp_usercontext, _raw_write_lock_irqsave)
sg_remove_device -> (__wake_up, refcount_warn_saturate, kill_fasync, cdev_del, device_destroy, _raw_write_unlock_irqrestore, blk_put_queue, _raw_read_unlock_irqrestore, _raw_read_lock_irqsave, blk_trace_remove, idr_remove, sysfs_remove_link, kfree, _raw_write_lock_irqsave)
sg_remove_request -> (__wake_up, _raw_write_unlock_irqrestore, _raw_write_lock_irqsave)
sg_remove_sfp_usercontext -> (sg_finish_rem_req, refcount_warn_saturate, _raw_write_unlock_irqrestore, blk_put_queue, kfree, scsi_device_put, blk_trace_remove, idr_remove, __free_pages, _raw_write_lock_irqsave)
sg_rq_end_io -> (__wake_up, _printk, refcount_warn_saturate, scsi_normalize_sense, kill_fasync, blk_mq_free_request, jiffies_to_msecs, queue_work_on, _raw_write_unlock_irqrestore, __scsi_print_sense, sg_rq_end_io_usercontext, sg_remove_sfp_usercontext, _raw_write_lock_irqsave)
sg_rq_end_io_usercontext -> (__wake_up, sg_finish_rem_req, refcount_warn_saturate, queue_work_on, _raw_write_unlock_irqrestore, sg_remove_sfp_usercontext, _raw_write_lock_irqsave)
sg_write -> (_printk, sg_remove_request, mutex_lock, _copy_from_user, mutex_unlock, sg_add_request, sg_common_write, __task_pid_nr_ns, __copy_overflow, sg_new_write, scsi_block_when_processing_errors, ___ratelimit)

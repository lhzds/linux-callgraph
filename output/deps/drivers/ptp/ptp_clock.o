drivers/ptp/ptp_clock.o
ptp_aux_kworker -> (kthread_queue_delayed_work)
ptp_cancel_worker_sync -> (kthread_cancel_delayed_work_sync)
ptp_clock_adjtime -> (mutex_unlock, _printk, mutex_lock_interruptible)
ptp_clock_event -> (__wake_up, ktime_get_snapshot, _raw_spin_lock_irqsave, pps_event, ns_to_timespec64, _raw_spin_unlock_irqrestore)
ptp_clock_register -> (ptp_clock_settime, pps_unregister_source, posix_clock_register, pps_register_source, ida_free, ptp_clock_gettime, dev_set_name, ptp_open, put_device, kmalloc_trace, ptp_getcycles64, ptp_clock_adjtime, _printk, snprintf, ptp_populate_pin_groups, init_timer_key, kthread_create_worker, kthread_destroy_worker, __init_waitqueue_head, ptp_cleanup_pin_groups, ptp_clock_getres, ptp_ioctl, kthread_delayed_work_timer_fn, ptp_read, __mutex_init, device_initialize, strcmp, ptp_poll, ptp_clock_release, ptp_aux_kworker, ida_alloc_range, kfree)
ptp_clock_release -> (ptp_cleanup_pin_groups, kfree, ida_free)
ptp_clock_settime -> (mutex_unlock, _printk, mutex_lock_interruptible)
ptp_clock_unregister -> (__wake_up, device_for_each_child, pps_unregister_source, mutex_unlock, unregister_vclock, posix_clock_unregister, kthread_destroy_worker, kthread_cancel_delayed_work_sync, mutex_lock_interruptible)
ptp_exit -> (class_destroy, unregister_chrdev_region, ida_destroy)
ptp_find_pin_unlocked -> (mutex_unlock, mutex_lock)
ptp_init -> (_printk, class_destroy, class_create, alloc_chrdev_region)
ptp_schedule_worker -> (kthread_mod_delayed_work)
unregister_vclock -> (ptp_vclock_unregister)

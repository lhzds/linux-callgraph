drivers/md/dm_table.o
device_area_is_invalid -> (_printk, dm_device_name)
dm_calculate_queue_limits -> (_printk, device_area_is_invalid, dm_set_device_limits, blk_set_stacking_limits, dm_device_name, device_not_matches_zone_sectors, blk_stack_limits)
dm_get_device -> (early_lookup_bdev, refcount_warn_saturate, dm_get_table_device, lookup_bdev, kmalloc_trace, sscanf, kfree, dm_put_table_device)
dm_put_device -> (_printk, refcount_warn_saturate, dm_device_name, kfree, dm_put_table_device)
dm_read_arg -> (sscanf)
dm_read_arg_group -> (sscanf)
dm_set_device_limits -> (_printk, dm_device_name, blk_stack_limits)
dm_split_args -> (kmalloc_trace, kfree, skip_spaces, __kmalloc)
dm_table_add_target -> (_printk, static_key_enable, static_key_count, dm_split_args, dm_put_target_type, dm_device_name, dm_get_target_type, kfree)
dm_table_complete -> (dm_free_md_mempools, _printk, dm_get_md_type, device_not_dax_capable, bioset_init, kvmalloc_node, dm_get_reserved_rq_based_ios, dm_put_live_table, dm_get_reserved_bio_based_ios, device_not_poll_capable, device_is_rq_stackable, dm_get_live_table, kmalloc_node_trace)
dm_table_create -> (kvmalloc_node, kmalloc_trace, kfree, kvfree)
dm_table_destroy -> (dm_free_md_mempools, _printk, dm_put_target_type, dm_device_name, kvfree, kfree, dm_put_table_device)
dm_table_device_name -> (dm_device_name)
dm_table_event -> (mutex_unlock, mutex_lock)
dm_table_event_callback -> (mutex_unlock, mutex_lock)
dm_table_has_no_data_devices -> (count_device)
dm_table_resume_targets -> (_printk, dm_device_name)
dm_table_run_md_queue_async -> (blk_mq_run_hw_queues)
dm_table_set_restrictions -> (disk_update_readahead, device_not_discard_capable, device_is_rotational, device_not_dax_capable, device_not_nowait_capable, device_flush_capable, device_not_secure_erase_capable, blk_queue_flag_set, device_not_write_zeroes_capable, blk_queue_flag_clear, device_dax_write_cache_enabled, device_is_not_random, device_not_poll_capable, device_requires_stable_pages, dm_disk, device_not_dax_synchronous_capable, blk_queue_write_cache)

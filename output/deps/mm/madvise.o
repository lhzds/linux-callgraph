mm/madvise.o
__ia32_sys_madvise -> (do_madvise)
__ia32_sys_process_madvise -> (__se_sys_process_madvise)
__se_sys_process_madvise -> (pidfd_get_task, import_iovec, refcount_warn_saturate, iov_iter_advance, mmput, do_madvise, __put_task_struct, capable, mm_access, kfree)
__x64_sys_madvise -> (do_madvise)
__x64_sys_process_madvise -> (__se_sys_process_madvise)
do_madvise -> (__SCT__might_resched, xas_find, flush_tlb_mm_range, read_swap_cache_async, faultin_vma_page_range, blk_finish_plug, zap_page_range_single, trace_mmap_lock_unreg, migrate_folio, split_vma, __mmap_lock_do_trace_start_locking, vma_is_anon_shmem, vma_merge, __swap_read_unplug, __folio_put, vfs_fadvise, linear_hugepage_index, __traceiter_mmap_lock_released, __traceiter_mmap_lock_acquire_returned, fput, __rcu_read_unlock, shmem_error_remove_page, madvise_cold_or_pageout_pte_range, __probestub_mmap_lock_acquire_returned, __mmu_notifier_invalidate_range_start, _printk, noop_dirty_folio, __SCT__tp_func_mmap_lock_acquire_returned, down_read, vfs_fallocate, __probestub_mmap_lock_released, __mmu_notifier_invalidate_range_end, down_write_killable, walk_page_range, mtree_load, __SCT__tp_func_mmap_lock_start_locking, __probestub_mmap_lock_start_locking, shmem_writepage, shmem_write_end, shmem_write_begin, find_vma, blk_start_plug, tlb_finish_mmu, __mmap_lock_do_trace_released, xas_pause, down_write, tlb_gather_mmu, madvise_free_pte_range, up_write, trace_mmap_lock_reg, up_read, __traceiter_mmap_lock_start_locking, inode_permission, __rcu_read_lock, find_vma_prev, __mmu_notifier_invalidate_range, __mmap_lock_do_trace_acquire_returned, __SCT__tp_func_mmap_lock_released, inode_owner_or_capable, swapin_walk_pmd_entry, lru_add_drain)
madvise_cold_or_pageout_pte_range -> (__pte_offset_map_lock, __folio_put, _raw_spin_unlock, folio_isolate_lru, folio_total_mapcount, folio_putback_lru, flush_tlb_batched_pending, inode_permission, __SCT__cond_resched, reclaim_pages, vm_normal_folio, inode_owner_or_capable, folio_unlock, folio_deactivate)
madvise_free_pte_range -> (free_swap_and_cache, __pte_offset_map_lock, __folio_put, _raw_spin_unlock, percpu_counter_add_batch, folio_total_mapcount, flush_tlb_batched_pending, __SCT__cond_resched, vm_normal_folio, mm_trace_rss_stat, folio_unlock, folio_mark_lazyfree, folio_free_swap)
swapin_walk_pmd_entry -> (__swap_read_unplug, __pte_offset_map_lock, __folio_put, _raw_spin_unlock, read_swap_cache_async, __SCT__cond_resched)

mm/migrate.o
__buffer_migrate_folio -> (__SCT__might_resched, __folio_put, _raw_spin_unlock, __lock_buffer, _raw_spin_lock, folio_copy, folio_migrate_mapping, unlock_buffer, invalidate_bh_lrus, folio_migrate_flags, set_bh_page)
__ia32_sys_move_pages -> (__se_sys_move_pages)
__se_sys_move_pages -> (refcount_warn_saturate, putback_movable_pages, cpuset_mems_allowed, trace_mmap_lock_unreg, _copy_to_user, __mmap_lock_do_trace_start_locking, __folio_put, _copy_from_user, follow_page, mmput, PageHuge, migrate_pages, __traceiter_mmap_lock_released, __traceiter_mmap_lock_acquire_returned, __probestub_mmap_lock_acquire_returned, capable, __rcu_read_unlock, security_task_movememory, get_task_mm, __SCT__tp_func_mmap_lock_acquire_returned, ptrace_may_access, isolate_lru_page, down_read, lru_cache_disable, __probestub_mmap_lock_released, vma_migratable, mtree_load, __SCT__tp_func_mmap_lock_start_locking, __put_task_struct, __probestub_mmap_lock_start_locking, alloc_migration_target, __mmap_lock_do_trace_released, find_task_by_vpid, trace_mmap_lock_reg, up_read, __traceiter_mmap_lock_start_locking, mod_node_page_state, __rcu_read_lock, __SCT__tp_func_mmap_lock_released, __mmap_lock_do_trace_acquire_returned, isolate_hugetlb)
__x64_sys_move_pages -> (__se_sys_move_pages)
alloc_migration_target -> (alloc_hugetlb_folio_nodemask, __folio_alloc, size_to_hstate, folio_test_hugetlb)
buffer_migrate_folio -> (__buffer_migrate_folio)
buffer_migrate_folio_norefs -> (__buffer_migrate_folio)
filemap_migrate_folio -> (folio_migrate_flags, folio_copy, __folio_put, folio_migrate_mapping)
folio_lock -> (__folio_lock, __SCT__might_resched)
folio_migrate_copy -> (folio_copy, folio_migrate_flags)
folio_migrate_flags -> (folio_test_hugetlb, folio_end_writeback)
folio_migrate_mapping -> (__mod_zone_page_state, _raw_spin_unlock, _raw_spin_lock_irq, xas_store, _raw_spin_unlock_irq, inode_to_bdi, __page_file_index, __mod_node_page_state)
isolate_movable_page -> (folio_unlock, PageMovable, __folio_put)
migrate_folio -> (folio_copy, folio_migrate_flags, folio_migrate_mapping)
migrate_folio_extra -> (folio_copy, folio_migrate_flags, folio_migrate_mapping)
migrate_huge_page_move_mapping -> (_raw_spin_lock_irq, xas_store, __page_file_index, _raw_spin_unlock_irq)
migrate_pages -> (__SCT__might_resched, folio_test_hugetlb, try_to_migrate, __SCT__tp_func_mm_migrate_pages, folio_get_anon_vma, __SCT__tp_func_mm_migrate_pages_start, __traceiter_mm_migrate_pages, move_hugetlb_state, size_to_hstate, move_to_new_folio, remove_migration_pte, __folio_lock, folio_mapping, folio_putback_active_hugetlb, __SCT__cond_resched, __traceiter_mm_migrate_pages_start, __probestub_mm_migrate_pages, up_write, migrate_pages_batch, __probestub_mm_migrate_pages_start, hugetlb_page_mapping_lock_write, folio_unlock, __put_anon_vma, rmap_walk)
migrate_pages_batch -> (folio_add_lru, __SCT__might_resched, try_to_unmap_flush, __folio_put, try_to_migrate, rmap_walk, folio_wait_writeback, __SCT__cond_resched, mod_node_page_state, folio_get_anon_vma, try_to_free_buffers, move_to_new_folio, folio_unlock, __folio_lock, remove_migration_pte, __put_anon_vma, lru_add_drain)
migration_entry_wait -> (__pte_offset_map_lock, migration_entry_wait_on_locked, _raw_spin_unlock)
migration_entry_wait_huge -> (_raw_spin_unlock, _raw_spin_lock, is_hugetlb_entry_migration, hugetlb_vma_unlock_read, hugetlb_vma_assert_locked, migration_entry_wait_on_locked)
move_to_new_folio -> (__SCT__might_resched, folio_clear_dirty_for_io, PageMovable, folio_copy, folio_mapping, __page_file_index, folio_migrate_mapping, __folio_lock, filemap_release_folio, folio_migrate_flags, remove_migration_pte, rmap_walk)
putback_movable_pages -> (folio_test_hugetlb, __folio_put, PageMovable, folio_putback_active_hugetlb, folio_lock, folio_putback_lru, mod_node_page_state, folio_unlock)
remove_migration_pte -> (folio_test_hugetlb, hugepage_add_anon_rmap, mlock_drain_local, __SCT__tp_func_remove_migration_pte, page_add_anon_rmap, page_add_file_rmap, page_vma_mapped_walk, linear_hugepage_index, __traceiter_remove_migration_pte, __probestub_remove_migration_pte, hugetlb_basepage_index)
remove_migration_ptes -> (rmap_walk_locked, remove_migration_pte, rmap_walk)
